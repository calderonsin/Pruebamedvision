// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pruebamedvision.Data;

#nullable disable

namespace Pruebamedvision.Migrations
{
    [DbContext(typeof(PruebatecnicaDbContext))]
    [Migration("20230712021758_thirdon")]
    partial class thirdon
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CitaMotivoCita", b =>
                {
                    b.Property<Guid>("CitasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MotivoCitasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CitasId", "MotivoCitasId");

                    b.HasIndex("MotivoCitasId");

                    b.ToTable("CitaMotivoCita");
                });

            modelBuilder.Entity("Pruebamedvision.Models.Cita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("Pruebamedvision.Models.MotivoCita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MotivoCitas");
                });

            modelBuilder.Entity("Pruebamedvision.Models.Persona", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("CitaMotivoCita", b =>
                {
                    b.HasOne("Pruebamedvision.Models.Cita", null)
                        .WithMany()
                        .HasForeignKey("CitasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pruebamedvision.Models.MotivoCita", null)
                        .WithMany()
                        .HasForeignKey("MotivoCitasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pruebamedvision.Models.Cita", b =>
                {
                    b.HasOne("Pruebamedvision.Models.Persona", "Persona")
                        .WithMany("Citas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Pruebamedvision.Models.Persona", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
